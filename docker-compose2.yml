version: '3.2'

services:

  zipkin:
    image: openzipkin/zipkin
    container_name: service-zipkin
    ports:
      - 9411:9411

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '29094:29094'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=EXTERNAL://0.0.0.0:9092,INTERNAL://kafka:29094
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://127.0.0.1:9092,INTERNAL://kafka:29094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=host.docker.internal 
    depends_on:
      - zookeeper
      - eureka-server
      
  account-processor:
    build: ./account-processor 
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka     
    depends_on:
      - kafka
      - zuul-server
      - zipkin
      
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"

  zuul-server:
    build: ./zuul-server
    ports:
      - "80:80"
    depends_on:
      - eureka-server
      - zipkin
      
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka     

  account-service:
    build: ./account-service
    ports:
      - "8000:8000"
    depends_on:
      - eureka-server
      - zuul-server
      - kafka
      - zipkin
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka     

  rest1-server:
    build: ./rest1-server
    ports:
      - "9001:9001"
    depends_on:
      - eureka-server
      - zuul-server
      - zipkin 
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka


  rest2-server:
    build: ./rest2-server
    ports:
      - "9002:9002"
    depends_on:
      - eureka-server
      - zuul-server
      - zipkin
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka

  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - ./prometheus/prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
      depends_on:
       - account-service
       - eureka-server
      environment:
        eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka
      restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
      - eureka-server
    environment:
        eureka.client.serviceUrl.defaultZone: http://eureka-server:8761/eureka

  node-exporter:
    image: prom/node-exporter:latest # Prometheus component that exports system metrics to Prometheus
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    depends_on:
      - prometheus
      - grafana